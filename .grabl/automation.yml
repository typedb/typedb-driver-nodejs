#
# Copyright (C) 2021 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    typedb-common: [build, release]
    typedb-behaviour: [build]

build:
  quality:
    filter:
      owner: vaticle
      branch: master
    dependency-analysis:
      image: vaticle-ubuntu-21.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //... --spawn_strategy=local
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)')
        npm run lint
    test-integration:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        ./test/common/start-core-server.sh
        sleep 10
        npm run test && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        ./test/common/stop-core-server.sh
        exit $TEST_SUCCESS
    test-cluster-failover:
      machine: 4-core-8-gb
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        source test/common/start-cluster-servers.sh # use source to receive export vars
        npm run test-cluster-failover && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        ./test/common/stop-cluster-servers.sh
        exit $TEST_SUCCESS
    test-behaviour-connection-core:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-core.sh //test/behaviour/connection/... --test_output=errors --jobs=1
    test-behaviour-connection-cluster:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-cluster.sh //test/behaviour/connection/... --test_output=errors --jobs=1
    test-behaviour-concept-core:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-core.sh //test/behaviour/concept/... --test_output=errors --jobs=1
    test-behaviour-concept-cluster:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-cluster.sh //test/behaviour/concept/... --test_output=errors --jobs=1
    # TODO: Delete --jobs=1 once tests are parallelisable
    test-behaviour-match-core:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-core.sh //test/behaviour/typeql/language/match/... --test_output=errors --jobs=1
        .grabl/test-core.sh //test/behaviour/typeql/language/get/... --test_output=errors --jobs=1
    test-behaviour-match-cluster:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-cluster.sh //test/behaviour/typeql/language/match/... --test_output=errors --jobs=1
        .grabl/test-cluster.sh //test/behaviour/typeql/language/get/... --test_output=errors --jobs=1
    test-behaviour-writable-core:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-core.sh //test/behaviour/typeql/language/insert/... --test_output=errors --jobs=1
        .grabl/test-core.sh //test/behaviour/typeql/language/delete/... --test_output=errors --jobs=1
        .grabl/test-core.sh //test/behaviour/typeql/language/update/... --test_output=errors --jobs=1
    test-behaviour-writable-cluster:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-cluster.sh //test/behaviour/typeql/language/insert/... --test_output=errors --jobs=1
        .grabl/test-cluster.sh //test/behaviour/typeql/language/delete/... --test_output=errors --jobs=1
        .grabl/test-cluster.sh //test/behaviour/typeql/language/update/... --test_output=errors --jobs=1
    test-behaviour-definable-core:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-core.sh //test/behaviour/typeql/language/define/... --test_output=errors --jobs=1
        .grabl/test-core.sh //test/behaviour/typeql/language/undefine/... --test_output=errors --jobs=1
    test-behaviour-definable-cluster:
      image: vaticle-ubuntu-21.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .grabl/test-cluster.sh //test/behaviour/typeql/language/define/... --test_output=errors --jobs=1
        .grabl/test-cluster.sh //test/behaviour/typeql/language/undefine/... --test_output=errors --jobs=1
    deploy-npm-snapshot:
      filter:
        owner: vaticle
        branch: master
      image: vaticle-ubuntu-21.04
      dependencies: [
        build, test-integration,
        test-behaviour-connection-core, test-behaviour-connection-cluster,
        test-behaviour-concept-core, test-behaviour-concept-cluster,
        test-behaviour-match-core, test-behaviour-match-cluster,
        test-behaviour-writable-core, test-behaviour-writable-cluster,
        test-behaviour-definable-core, test-behaviour-definable-cluster
      ]
      command: |
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt update -y
        sudo apt install -y expect
        export DEPLOY_NPM_TOKEN=$REPO_VATICLE_NPM_TOKEN
        bazel run --define version=$(git rev-parse HEAD) //:deploy-npm -- snapshot
    test-deployment-npm:
      filter:
        owner: vaticle
        branch: master
      image: vaticle-ubuntu-21.04
      dependencies: [deploy-npm-snapshot]
      command: |
        ./test/common/start-core-server.sh
        cd test/deployment/
        echo -n "0.0.0-$GRABL_COMMIT" > ../../VERSION
        npm install https://repo.vaticle.com/repository/npm-snapshot-group/typedb-client/-/typedb-client-$(cat ../../VERSION).tgz
        sudo -H npm install jest --global
        jest --detectOpenHandles application.test.js && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        ../common/stop-core-server.sh
        exit $TEST_SUCCESS

release:
  filter:
    owner: vaticle
    branch: master
  validation:
    validate-dependencies:
      image: vaticle-ubuntu-21.04
      command: bazel test //:release-validate-nodejs-deps --test_output=streamed
  deployment:
    deploy-github:
      image: vaticle-ubuntu-21.04
      command: |
        pyenv install -s 3.6.10
        pyenv global 3.6.10 system
        pip install certifi
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export NOTES_CREATE_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @vaticle_dependencies//tool/release/notes:create -- $GRABL_OWNER $GRABL_REPO $GRABL_COMMIT $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $GRABL_COMMIT
    deploy-npm-release:
      image: vaticle-ubuntu-21.04
      command: |
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt update -y
        sudo apt install -y expect
        export DEPLOY_NPM_TOKEN=$REPO_NPM_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-npm -- release
      dependencies: [deploy-github]
